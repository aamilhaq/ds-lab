#include <stdio.h>
#include <stdlib.h>

#define n 10

int Deque[n];
int front=-1, rear=-1;

int DequeEmpty() {
    return front==-1;
}

int DequeFull() {
    return (front==0 && rear==n-1) || (front==(rear+1)%n);
}

void insertFront(int value) {
    if (DequeFull()) {
        printf("Circular Deque is full. Cannot insert at the front.\n");
    } else {
        if (DequeEmpty()) {
            front=rear=0;
        } else if (front==0) {
            front=n-1;
        } else {
            front=front-1;
        }
        Deque[front]=value;
        printf("Inserted %d at the front.\n", value);
    }
}

void insertRear(int value) {
    if (DequeFull()) {
        printf("Circular Deque is full. Cannot insert at the rear.\n");
    } else {
        if (DequeEmpty()) {
            front=rear=0;
        } else {
            rear=(rear+1)%n;
        }
        Deque[rear]=value;
        printf("Inserted %d at the rear.\n", value);
    }
}

void deleteFront() {
    if (DequeEmpty()) {
        printf("Circular Deque is empty. Cannot delete from the front.\n");
    } else {
        printf("Deleted %d from the front.\n", Deque[front]);
        if (front==rear) {
            front=rear=-1;
        } else {
            front=(front+1)%n;
        }
    }
}

void deleteRear() {
    if (DequeEmpty()) {
        printf("Circular Deque is empty. Cannot delete from the rear.\n");
    } else {
        printf("Deleted %d from the rear.\n", Deque[rear]);
        if (front==rear) {
            front=rear=-1;
        } else if (rear==0) {
            rear=n-1;
        } else {
            rear=rear-1;
        }
    }
}

void display() {
    if (DequeEmpty()) {
        printf("Circular Deque is empty.\n");
    } else {
        int i=front;
        printf("Circular Deque elements: ");
        do {
            printf("%d ", Deque[i]);
            if (i==rear) {
                break;
            }
            i=(i+1)%n;
        } while (i!=front);
        printf("\n");
    }
}

int main() {
    int ch, value;

    while (1) {
        printf("\nCircular Deque Operations:\n");
        printf("1. Insert at front\n");
        printf("2. Insert at rear\n");
        printf("3. Delete from front\n");
        printf("4. Delete from rear\n");
        printf("5. Display\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                printf("Enter value to insert at the front: ");
                scanf("%d", &value);
                insertFront(value);
                break;
            case 2:
                printf("Enter value to insert at the rear: ");
                scanf("%d", &value);
                insertRear(value);
                break;
            case 3:
                deleteFront();
                break;
            case 4:
                deleteRear();
                break;
            case 5:
                display();
                break;
            case 6:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
