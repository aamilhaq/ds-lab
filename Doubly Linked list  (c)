#include<stdio.h>
#include<stdlib.h>
struct node
	{int data;
    	struct node *next;
    	struct node *prev
	};
struct node *p,*head, *tail, *ptr,*pre;
int n;
void insertatend()
	{p=(struct node*)malloc(sizeof(struct node));
 	printf("Enter the data\n");
 	scanf("%d",&p->data);
 	p->next=NULL;
 	p->prev=NULL;
 	if (head==NULL)
 		{
     		head=p;
     		tail=p;
 		}
 	else
 		{
 		tail->next=p;
 		p->prev=tail;
 		tail=p;    
 		}
 	}
void insertatbegining()
	{p=(struct node*)malloc(sizeof(struct node));
 	printf("Enter the data\n");
 	scanf("%d",&p->data);
 	p->next=NULL;
 	if (head==NULL)
 		{
     		head=p;
     		tail=p;
 		}
 	else
 		{p->next=head;
 		head->prev=p;
 		head=p;
 		}
	}
void insertatspecificnode()
	{p=(struct node*)malloc(sizeof(struct node));
 	printf("Enter the data\n");
 	scanf("%d",&p->data);
 	p->next=NULL;
 	if (head==NULL)
 		{
     		head=p;
     		tail=p;
 		}
 	else
 		{
 		printf("Enter the node at which you wish to insert");
 		scanf("%d",&n);
 		ptr=head;
 		while ((ptr->data!=n)&&(ptr!=NULL))
 			{ptr=ptr->next;
 			}
 		if(ptr->data==n)
 			{if(ptr==head)
 				{insertatbegining();
 				}
 			else if(ptr==tail)
				{insertatend();
				}
			else
				{
 				p->next=ptr->next;
 				ptr->next->prev=p;
 				ptr->next=p;
 				}
 			}
 		}
	}
void deleteattheend()
	{if (head==NULL)
		{printf("list empty");
		}
	else if(head==tail)
		{ptr=head;
		head=NULL;
		tail=NULL;
		free(ptr);
		}
	else
		{ptr=head;
		while (ptr->next!=NULL)
			{pre=ptr;
			ptr=ptr->next;
			}
		pre->next=NULL;
		tail=pre;
		free(ptr);
		}
	}
void deleteatbegining()
	{if (head==NULL)
		{printf("list empty");
		}
	else if(head==tail)
		{ptr=head;
		head=NULL;
		tail=NULL;
		free(ptr);
		}
	else
		{ptr=head;
		head=ptr->next;
		head->prev=NULL;
		free(ptr);
		}
	}
void deleteatspecificnode()
	{if (head==NULL)
		{printf("list empty");
		}
	else if(head==tail)
		{ptr=head;
		head=NULL;
		tail=NULL;
		free(ptr);
		}
	else
		{printf("enter the node to be deleted");
		scanf("%d",&n);
		if(head->data==n)
		{deleteatbegining();
		}
		else if(tail->data==n)
		{deleteattheend();
		}
		else
		{
		ptr=head;
		while ((ptr->data!=n)&&(ptr!=NULL))
			{pre=ptr;
			ptr=ptr->next;
			}
		pre->next=ptr->next;
		ptr->next->prev=pre;
		free(ptr);
		}
		}
	}
void display()
{
    ptr=head;
    printf("The linked list is\n");
    while(ptr!=NULL)
    {
        printf("%d\t",ptr->data);
        ptr=ptr->next;
    }
}

void main()
{
	int choice=-1; head=NULL;
	while(choice!=8)
	{
		printf("\n~~~~~~~~~~~~~~~~~~~~Menu~~~~~~~~~~~~~~~~~\n1 Insert at the end\n2 Insert at begining\n3 Insert at specific node\n4 Delete at the end\n5 Delete at begining\n6 Delete at specific node\n7 display\n8 exit\n");
    		printf("Enter choice\n");
    		scanf("%d",&choice);
    		switch(choice)
    		{
    		 	case 1: insertatend();
              			break;
     			case 2:insertatbegining();
     				break;
     			case 3:insertatspecificnode();
     				break;
     			case 4:deleteattheend();
     				break;
     			case 5:deleteatbegining();
     				break;
     			case 6:deleteatspecificnode();
     				break;
      			case 7: display();
             			break;
     			case 8: break;
     			default:printf("Enter vaild choice");    
    }
   
}
}
